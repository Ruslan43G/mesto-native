{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/Api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/ImagePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/header/Vector.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","user","useContext","isOwn","card","owner","_id","trashButtonClassName","isLiked","likes","some","item","likeButtonClassName","data-owner","onClick","console","log","link","name","onTrashClick","type","onLikeClick","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","key","onCardDelete","onCardLike","onCardClick","Footer","api","options","this","_url","baseUrl","_headers","headers","formData","fetch","method","body","JSON","stringify","then","res","ok","json","Promise","reject","status","statusText","newUserData","cardId","boolean","authorization","PopupWithForm","isOpen","evt","target","classList","contains","onClose","onSubmit","id","noValidate","title","children","aria-label","isLoading","buttonText","EitProfilePopup","useState","setName","description","setDescription","useEffect","preventDefault","value","onChange","placeholder","minLength","maxLength","pattern","required","ImagePopup","EditAvatarPopup","avatarRef","useRef","current","ref","AddPlacePopup","newCard","setNewCard","App","currentUser","setCurrentUser","profileIsOpen","setProfileIsOpen","avatarIsOpen","setAvatarIsOpen","addCardIsOpen","setAddCardIsOpen","selectedCard","setSelectedCard","setCards","setIsLoading","all","getUserInfo","getInitialCards","userInfo","initialCards","catch","err","deleteIsOpen","setDeleteIsOpen","closeAllPopups","Provider","handleLike","newCards","deleteCard","filter","data","setUserInfo","postNewCard","setUserAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.2c2f2e45.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/header/Vector.svg'\r\n//компонент хидер\r\nexport default function Header () {\r\n    return (\r\n        <header className=\"header\">\r\n           <img className=\"header__logo\" src={logo} alt=\"логотип сервиса\"/>\r\n       </header>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n//компонент карточки\r\nexport default function Card (props) {                                                                       // создаём класс для карточки\r\n    //подписываемся на контекс юзера\r\n    const user = React.useContext(CurrentUserContext);\r\n    //определяем отображение иконки удаления\r\n    const isOwn = props.card.owner._id === user._id;\r\n    const trashButtonClassName = `${isOwn ? 'elements__trash' : 'elements__trash elements__trash_hidden' }`;\r\n    //определяем отображение лайка\r\n    const isLiked = props.card.likes.some(item => item._id === user._id);\r\n    const likeButtonClassName = `${isLiked ? 'elements__like elements__like_active' : 'elements__like'}`;\r\n    //хэндлер клика по картинке для открытия попапа\r\n    function handleClick() {\r\n        props.onClick(props.card);\r\n        console.log(user);\r\n    }\r\n    function handleLikeOnClick () {\r\n        props.onLikeClick(props.card);\r\n    }\r\n    function handleTrashClick() {\r\n        props.onTrashClick(props.card);\r\n    }\r\n    // отрисовка компонента\r\n    return (\r\n        <div className=\"elements__item\" data-owner=\"\">\r\n            <img className=\"elements__img\" onClick={handleClick} src={props.card.link} alt={props.card.name} />\r\n            <button className={trashButtonClassName} onClick={handleTrashClick} type=\"button\"></button>\r\n            <h3 className=\"elements__title\">{props.card.name}</h3>\r\n            <button className={likeButtonClassName} onClick={handleLikeOnClick} type=\"button\"></button>\r\n            <p className=\"elements__like-counter\">{props.card.likes.length}</p>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n//основной компонент. Содержит секцию с профилем и карточками.\r\nexport default function Main (props) {\r\n    //подписка на контекст юзера\r\n    const user = React.useContext(CurrentUserContext);\r\n    \r\n    //Отрисовка компонента\r\n    return (\r\n        <> \r\n            <section className=\"profile\">\r\n                <img className=\"profile__img\" src={user.avatar} alt=\"автар пользователя\"/>\r\n                <div className=\"profile__img-hover\" onClick={props.onEditAvatar}></div>\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__name\">{user.name}</h1>\r\n                    <button className=\"profile__edit-btn\" onClick={props.onEditProfile} type=\"button\"></button>\r\n                    <p className=\"profile__about\">{user.about}</p>\r\n                </div>\r\n                <button className=\"profile__add-btn\" onClick={props.onAddPlace} type=\"button\"></button>\r\n            </section>\r\n            <main className=\"elements\">\r\n                {props.cards.map(item => <Card key={item._id} card={item} onTrashClick={props.onCardDelete} onLikeClick={props.onCardLike} onClick={props.onCardClick} />)}\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n//компонент футер\r\nexport default function Footer () {\r\n    return (\r\n        <footer className=\"footer\">\r\n           <p className=\"footer__copyright\">&copy; 2020 Руслан Тихомиров</p>\r\n       </footer>\r\n    )\r\n}","\r\nclass Api {\r\n    constructor(options) {\r\n        this._url = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    postNewCard (formData) {\r\n        return fetch (`${this._url}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: formData.name,\r\n                link: formData.link\r\n            })    \r\n            }\r\n        )\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`${res.status} ${res.statusText}`);\r\n        });\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._url}/cards`, {\r\n            headers: this._headers\r\n        })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`${res.status} ${res.statusText}`);\r\n        });  \r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._url}/users/me`, {\r\n            headers: this._headers\r\n            })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            });   \r\n\r\n    }\r\n\r\n    setUserInfo(newUserData) {\r\n        return fetch (`${this._url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: newUserData.name,\r\n                about: newUserData.about\r\n            })    \r\n            }\r\n        )\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`${res.status} ${res.statusText}`);\r\n        })\r\n    }\r\n\r\n    setUserAvatar (newUserData) {\r\n        return fetch (`${this._url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: newUserData.avatar\r\n            })    \r\n            }\r\n        )\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n        })\r\n    }\r\n\r\n    handleLike(cardId, boolean) {\r\n        if (boolean) {\r\n            return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n                method: 'DELETE',\r\n                headers: this._headers\r\n                })\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        return res.json();\r\n                    }\r\n                    return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n                });\r\n        } else {\r\n            return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n                method: 'PUT',\r\n                headers: this._headers\r\n                })\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        return res.json();\r\n                    }\r\n                    return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n                });\r\n        }\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._url}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n        });\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n    headers: {\r\n      authorization: '627f7bad-0dfb-4267-9517-9e8391316bf9',\r\n      'Content-Type': 'application/json'\r\n    }\r\n})\r\n\r\nexport default api;","import React from 'react';\r\n\r\nexport default function PopupWithForm (props) {\r\n\r\n    function overlayClickHandler(evt) {\r\n        if (evt.target.classList.contains('popup')) {\r\n            props.onClose();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={props.isOpen ? `popup ${props.name} popup_opened` : `popup ${props.name}`} onClick={overlayClickHandler}>\r\n            <form onSubmit={props.onSubmit} className='popup__container' id=\"profile-form\" noValidate>\r\n                <button className=\"popup__icon-close\" onClick={props.onClose} type=\"button\"></button>\r\n                <h3 className=\"popup__title popup__title_form\">{props.title}</h3>\r\n                {props.children}\r\n                <button className=\"popup__button popup__button_form\" id=\"profile-save-button\" type=\"submit\" aria-label=\"Сохранить\">{props.isLoading ? 'Загрузка...' : props.buttonText}</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nexport default function EitProfilePopup (props) {\r\n    const user = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setName(user.name);\r\n        setDescription(user.about)\r\n    }, [user])\r\n\r\n    function handleNameInput(evt) {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    function handleAboutInput(evt) {\r\n        setDescription(evt.target.value)\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        props.onSubmit({\r\n            name: name,\r\n            about: description\r\n        })\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name='popup_profile' buttonText='Сохранить' onSubmit={handleSubmit} title='Редактировать профиль' isOpen={props.isOpen} onClose={props.onClose} isLoading={props.isLoading}>\r\n            <>\r\n                <input value={name} onChange={handleNameInput} className=\"popup__input\" id=\"profile-input-name\" name=\"name\" type=\"text\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" pattern=\"^[А-Яа-яЁёA-Za-z\\s-]+$\" required />\r\n                <span className=\"popup__error\" id=\"profile-input-name-error\"></span>\r\n                <input value={description} onChange={handleAboutInput} className=\"popup__input\" id=\"profile-input-about\" name=\"job\" type=\"text\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required />\r\n                <span className=\"popup__error\" id=\"profile-input-about-error\"></span>\r\n            </>\r\n        </ PopupWithForm>\r\n    )\r\n}","import React from 'react';\r\n// компонент попапа с картинкой\r\nexport default function ImagePopup(props) {\r\n    return (\r\n        <section className={props.card.isOpen ? `popup popup_image` : `popup popup_image popup_opened`}>\r\n           <div className=\"popup__image-container\">\r\n                <button className=\"popup__icon-close popup__icon-close_image\" id=\"close-img-popup\" onClick={props.onClose} type=\"button\"></button>\r\n                <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n                <p className=\"popup__img-text\">{props.card.name}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function EditAvatarPopup (props) {\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit (evt) {\r\n        evt.preventDefault();\r\n        props.onSubmit({avatar: avatarRef.current.value});\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name='popup_avatar' buttonText='Сохранить' onSubmit={handleSubmit} title='Обновить аватар' isOpen={props.isOpen} onClose={props.onClose} isLoading={props.isLoading}>\r\n            <>\r\n                <input ref={avatarRef} className=\"popup__input\" id=\"avatar-url-input\" name=\"avatar\" type=\"url\" placeholder=\"Введите url\" required />\r\n                <span className=\"popup__error\" id=\"avatar-url-input-error\"></span>\r\n            </>\r\n        </PopupWithForm>  \r\n    )\r\n}","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function AddPlacePopup (props) {\r\n    const [newCard, setNewCard] = React.useState({name: '', link: ''});\r\n\r\n    function handleNameinput(evt) {\r\n        setNewCard({...newCard, name: evt.target.value})\r\n    }\r\n\r\n    function handleLinkInput(evt) {\r\n        setNewCard({...newCard, link: evt.target.value})\r\n    }\r\n\r\n    function handleOnSubmit(evt) {\r\n        evt.preventDefault();\r\n        props.onSubmit(newCard);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name='popup_card' buttonText='Создать' onSubmit={handleOnSubmit} title='Новое место' isOpen={props.isOpen} onClose={props.onClose} isLoading={props.isLoading}>\r\n            <>\r\n                <input className=\"popup__input\" onChange={handleNameinput} id=\"card-name-input\" name=\"name\" type=\"text\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required />\r\n                <span className=\"popup__error\" id=\"card-name-input-error\"></span>\r\n                <input className=\"popup__input\" onChange={handleLinkInput} id=\"card-url-input\" name=\"link\" type=\"url\" placeholder=\"Ссылка на картинку\"  required />\r\n                <span className=\"popup__error\" id=\"card-url-input-error\"></span>\r\n            </>\r\n        </PopupWithForm>\r\n    )\r\n}","import React from 'react';\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport Footer from './Footer.js';\r\nimport api from '../utils/Api.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport EditProfilePopup from './EditProfilePopup.js';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport EditAvatarPopup from './EditAvatarPopup.js';\r\nimport AddPlacePopup from './AddPlacePopup.js';\r\n\r\nfunction App() {\r\n  // [переменные состояния]\r\n  const [currentUser, setCurrentUser] = React.useState({name: '', about: '', avatar: '', _id: ''}); // переменная состояния пользователя\r\n  const [profileIsOpen, setProfileIsOpen] = React.useState(false); // попап профиля\r\n  const [avatarIsOpen, setAvatarIsOpen] = React.useState(false); // попап авата\r\n  const [addCardIsOpen, setAddCardIsOpen] = React.useState(false); // попап добавления карточки\r\n  const [selectedCard, setSelectedCard] = React.useState({        // попап картинки\r\n    isOpen: true,\r\n    link: '',\r\n    name: ''\r\n  });\r\n  const [cards, setCards] = React.useState([]); //массив картчоек\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  //эффект при монтировании\r\n  React.useEffect(() => {\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([userInfo, initialCards]) => {\r\n        setCurrentUser({name: userInfo.name, about: userInfo.about, avatar: userInfo.avatar, _id: userInfo._id});\r\n        setCards([...initialCards]);\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [])\r\n  const [deleteIsOpen, setDeleteIsOpen] = React.useState(false);\r\n  // функция закрытия всех попапов. Переводит переменные состояния в необходимые значения\r\n  function closeAllPopups() {\r\n    setProfileIsOpen(false);\r\n    setAvatarIsOpen(false);\r\n    setAddCardIsOpen(false);\r\n    setDeleteIsOpen(false);\r\n    setSelectedCard({\r\n      ...selectedCard,\r\n      isOpen: true,\r\n    });\r\n    setIsLoading(false);\r\n  }\r\n // Хэндлеры для открытия попапов\r\n  function handleEditAvatarClick () {\r\n    setAvatarIsOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick () {\r\n    setProfileIsOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick () {\r\n    setAddCardIsOpen(true);\r\n  }\r\n\r\n  function handleCardClick (props) {\r\n    setSelectedCard({\r\n      isOpen: false,\r\n      link: props.link,\r\n      name: props.name\r\n    });\r\n  }\r\n\r\n  function handleUpdateUser(data) {\r\n    setIsLoading(true);\r\n    api.setUserInfo(data)\r\n      .then((res) => {\r\n        setCurrentUser({...currentUser, name: res.name, about: res.about});\r\n        closeAllPopups();  \r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleUpdateAvatar(data) {\r\n    setIsLoading(true);\r\n    api.setUserAvatar(data)\r\n      .then((res) => {\r\n        setCurrentUser({...currentUser, avatar: res.avatar});\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  //функция снять поставить лайк\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\r\n    api.handleLike(card._id, isLiked)\r\n        .then((newCard) => {\r\n            const newCards = cards.map(item => item._id === card._id ? newCard : item);\r\n            setCards(newCards);\r\n        })\r\n        .catch(err => console.log(err));    \r\n}\r\n  //функция уалить карточку\r\n  function handleCardDelete (card) {\r\n      api.deleteCard(card._id)\r\n          .then(() => {\r\n              const newCards = cards.filter(item => item._id !== card._id);\r\n              setCards(newCards);\r\n          })\r\n          .catch(err => console.log(err))\r\n  }\r\n  //обработчик сабмит добавления карточки\r\n  function handleCardSubmit(data) {\r\n    setIsLoading(true);\r\n    api.postNewCard(data)\r\n      .then((newCard) => {\r\n        setCards([...cards, newCard]);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n  // рендер основной страницы\r\n  return (\r\n    <div className=\"page\">\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header />\r\n        <Main\r\n        cards={cards}\r\n        onCardLike={handleCardLike}\r\n        onCardDelete={handleCardDelete} \r\n        onEditAvatar={handleEditAvatarClick} \r\n        onEditProfile={handleEditProfileClick} \r\n        onAddPlace={handleAddPlaceClick}\r\n        onCardClick={handleCardClick}\r\n        />\r\n        <Footer />\r\n        <EditProfilePopup isOpen={profileIsOpen} onClose={closeAllPopups} onSubmit={handleUpdateUser} isLoading={isLoading}/>\r\n        <AddPlacePopup isOpen={addCardIsOpen} onClose={closeAllPopups} onSubmit={handleCardSubmit} isLoading={isLoading}/>\r\n        <EditAvatarPopup isOpen={avatarIsOpen} onClose={closeAllPopups} onSubmit={handleUpdateAvatar} isLoading={isLoading}/>\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n        <PopupWithForm name='popup_delete' buttonText='Да' title='Вы уверены?' isOpen={deleteIsOpen} onClose={closeAllPopups} isLoading={isLoading}/>\r\n      </CurrentUserContext.Provider>\r\n      </div> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App.js';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Vector.855a8c98.svg\";"],"sourceRoot":""}